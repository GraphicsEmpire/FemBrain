==============================================================================================
Research Problems:
1. Modeling and animating has a large gap between them. 
2. The collision between avatar and the deformable model is only detected when avatar hits a vertex of model.
3. Puncture by shunt insertion requires topology update around the collision area
4. Implement Tetrahedralization on the GPU completely.
5. GPU-Solver for finite elements
==============================================================================================
TODO:

1. Need a Desktop PC with NVIDIA GPU for testing double precision
2. Kernel code for face intersection
3. Kernel code for edge intersection










Output Triangle mesh obj
Per cellsize fixed nodes
Print blobtree with correct range kids
OpenCL Kernel for computing model volume on the fly in Deformable
Comments for blob files and AppConfig files
Color coded polygonizer based on material properties
Apply material properies per implicit primitives and blend them
Flight of staircases scenario
cleanup logger to reflect useful info
Shadow for models


Ground matrix should be blended in gray more
Transformation Nodes for scene graph
Shader to draw normals at vertices
Ray-tracing BlobTree and RBF representation 
 













List of features to be added:

1. Unified scenegraph data structure for all geometries.

	Graphics:
		a. Implicit Surfaces
		b. Mesh-based surfaces (Subdivision and others.)
		c. NURBS
		d. Bicubic and bilinear bezier patches
		e. Affine Transformations and other animations
		f. Custom shading programs embedded
		
	Physics:
		a. Tetrahedralization
		b. Voxelization
		c. Veg exporter/importer
		d. Material editor
		
2. OpenCL raytracing for scenegraph
3. Sketch Machine singleton that responds to commands for affine transformations and 
scenegraph incremental building modifications.
	Features:
		a. Scriptable language for building hierarchical structures based on scenegraph
		b. Custom shaders 
		c. Support for Rendering methods: 
			* Raytracer using OpenCL raytracer